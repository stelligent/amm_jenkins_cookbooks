{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This CloudFormation template creates a Jenkins server that houses a pipeline for the Honolulu Answers application. This is a proof of concept of getting that application up and running in the cloud.",
    "Parameters": {
        "repository": {
            "Type": "String",
            "Default": "https://github.com/stelligent/honolulu_answers.git",
            "Description": "The github repository where you code is stored. Note: this repoistory must be public."
        },
        "branch": {
            "Type": "String",
            "Default": "master",
            "Description": "The git branch of the repository you'd like Jenkins to be configured to look at."
        },
        "domain": {
            "Type": "String",
            "Description": "The Route 53 Hosted Zone to look for resource records. For example, if you want the Jenkins server to populate 'appdemo.stelligent.com', the entry for this field should be 'stelligent.com'"
        },
        "adminEmailAddress": {
            "Type": "String",
            "Description": "The address that Jenkins failure notices should come from."
        },
        "privateSubnetA": {
            "Type": "String",
            "Description": "The first private subnet in the VPC that the OpsWorks instances will launch into"
        },
        "privateSubnetB": {
            "Type": "String",
            "Description": "The second private subnet in the VPC that the OpsWorks instances will launch into"
        },
        "publicSubnet": {
            "Type": "String",
            "Description": "The public subnet in the VPC that the elastic load balancers will launch into"
        },
        "vpc": {
            "Type": "String",
            "Description": "The VPC to launch into"
        }
    },
    "Resources": {
        "JenkinsSdbDomain": {
            "Type": "AWS::SDB::Domain"
        },
        "jenkinsstack": {
            "Type": "AWS::OpsWorks::Stack",
            "Properties": {
                "VpcId": {
                    "Ref": "vpc"
                },
                "DefaultSubnetId": {
                    "Ref": "privateSubnetA"
                },
                "ConfigurationManager": {
                    "Name": "Chef",
                    "Version": "11.10"
                },
                "Name": {
                    "Ref": "AWS::StackName"
                },
                "ServiceRoleArn": {
                    "Fn::GetAtt": [
                        "OpsWorksServiceRole",
                        "Arn"
                    ]
                },
                "DefaultInstanceProfileArn": {
                    "Fn::GetAtt": [
                        "OpsWorksInstanceProfile",
                        "Arn"
                    ]
                },
                "CustomJson": {
                    "pipeline": {
                        "source": {
                            "Ref": "repository"
                        },
                        "branch": {
                            "Ref": "branch"
                        },
                        "jobs": [
                            "jenkins-test",
                            "clean-gemset",
                            "become-production-jenkins",
                            "create-new-jenkins",
                            "job-seed"
                        ],
                        "global_vars": {
                            "region": {
                                "Ref": "AWS::Region"
                            },
                            "sdb_domain": {
                                "Ref": "JenkinsSdbDomain"
                            },
                            "domain": {
                                "Ref": "domain"
                            },
                            "name_of_jenkins_stack": {
                                "Ref": "AWS::StackName"
                            },
                            "vpc": {
                                "Ref": "vpc"
                            },
                            "publicSubnet": {
                                "Ref": "publicSubnet"
                            },
                            "privateSubnetA": {
                                "Ref": "privateSubnetA"
                            },
                            "privateSubnetB": {
                                "Ref": "privateSubnetB"
                            }
                        },
                        "users": [
                            [
                                "admin",
                                "admin",
                                "admin"
                            ]
                        ],
                        "email": {
                            "username": {
                                "Ref": "EmailUserKeys"
                            },
                            "secret_key": {
                                "Fn::GetAtt": [
                                    "EmailUserKeys",
                                    "SecretAccessKey"
                                ]
                            },
                            "admin_email_address": {
                                "Ref": "adminEmailAddress"
                            }
                        }
                    },
                    "jenkins": {
                        "notifications": {
                            "enabled": "false"
                        },
                        "http_proxy": {
                            "variant": "apache2"
                        },
                        "server": {
                            "plugins": [
                                {
                                    "name": "analysis-core",
                                    "version": "1.38"
                                },
                                {
                                    "name": "ansicolor",
                                    "version": "0.3.1"
                                },
                                {
                                    "name": "audit-trail",
                                    "version": "1.8"
                                },
                                {
                                    "name": "brakeman",
                                    "version": "0.7"
                                },
                                {
                                    "name": "build-pipeline-plugin",
                                    "version": "1.4"
                                },
                                {
                                    "name": "buildresult-trigger",
                                    "version": "0.10"
                                },
                                {
                                    "name": "conditional-buildstep",
                                    "version": "1.3.1"
                                },
                                {
                                    "name": "config-file-provider",
                                    "version": "2.6.2"
                                },
                                {
                                    "name": "configurationslicing",
                                    "version": "1.38.3"
                                },
                                {
                                    "name": "cucumber-reports",
                                    "version": "0.0.21"
                                },
                                {
                                    "name": "delivery-pipeline-plugin",
                                    "version": "0.8.0"
                                },
                                {
                                    "name": "email-ext",
                                    "version": "2.35.1"
                                },
                                {
                                    "name": "envinject",
                                    "version": "1.89"
                                },
                                {
                                    "name": "fstrigger",
                                    "version": "0.34"
                                },
                                {
                                    "name": "git",
                                    "version": "1.4.0"
                                },
                                {
                                    "name": "git-client",
                                    "version": "1.0.6"
                                },
                                {
                                    "name": "github",
                                    "version": "1.8"
                                },
                                {
                                    "name": "github-api",
                                    "version": "1.44"
                                },
                                {
                                    "name": "groovy",
                                    "version": "1.14"
                                },
                                {
                                    "name": "groovy-postbuild",
                                    "version": "1.8"
                                },
                                {
                                    "name": "htmlpublisher",
                                    "version": "1.2"
                                },
                                {
                                    "name": "ivytrigger",
                                    "version": "0.26"
                                },
                                {
                                    "name": "jenkins-cloudformation-plugin",
                                    "version": "0.11"
                                },
                                {
                                    "name": "job-dsl",
                                    "version": "1.22"
                                },
                                {
                                    "name": "job-exporter",
                                    "version": "0.4"
                                },
                                {
                                    "name": "jquery",
                                    "version": "1.7.2-1"
                                },
                                {
                                    "name": "jquery-ui",
                                    "version": "1.0.2"
                                },
                                {
                                    "name": "log-parser",
                                    "version": "1.0.8"
                                },
                                {
                                    "name": "managed-scripts",
                                    "version": "1.1"
                                },
                                {
                                    "name": "multiple-scms",
                                    "version": "0.2"
                                },
                                {
                                    "name": "parameterized-trigger",
                                    "version": "2.21"
                                },
                                {
                                    "name": "postbuildscript",
                                    "version": "0.14"
                                },
                                {
                                    "name": "rake",
                                    "version": "1.7.8"
                                },
                                {
                                    "name": "rebuild",
                                    "version": "1.21"
                                },
                                {
                                    "name": "ruby-runtime",
                                    "version": "0.12"
                                },
                                {
                                    "name": "rubyMetrics",
                                    "version": "1.5.0"
                                },
                                {
                                    "name": "run-condition",
                                    "version": "0.10"
                                },
                                {
                                    "name": "rvm",
                                    "version": "0.4"
                                },
                                {
                                    "name": "scripttrigger",
                                    "version": "0.28"
                                },
                                {
                                    "name": "token-macro",
                                    "version": "1.9"
                                },
                                {
                                    "name": "urltrigger",
                                    "version": "0.31"
                                },
                                {
                                    "name": "ws-cleanup",
                                    "version": "0.18"
                                },
                                {
                                    "name": "xtrigger",
                                    "version": "0.54"
                                }
                            ],
                            "install_method": "package",
                            "version": "1.567-1.1"
                        }
                    }
                },
                "DefaultOs": "Amazon Linux",
                "UseCustomCookbooks": true,
                "CustomCookbooksSource": {
                    "Type": "git",
                    "Url": "https://github.com/stelligent/honolulu_jenkins_cookbooks.git"
                }
            }
        },
        "jenkinslayer": {
            "Type": "AWS::OpsWorks::Layer",
            "Properties": {
                "StackId": {
                    "Ref": "jenkinsstack"
                },
                "Name": "Jenkins Server Layer",
                "Type": "custom",
                "Shortname": "jenkins",
                "EnableAutoHealing": "true",
                "AutoAssignElasticIps": "false",
                "AutoAssignPublicIps": "true",
                "Attributes": {
                    "BundlerVersion": "1.3.5",
                    "PassengerVersion": "4.0.29",
                    "RailsStack": "apache_passenger",
                    "RubyVersion": "1.9.3",
                    "RubygemsVersion": "2.1.11"
                },
                "Packages": [
                    "readline-devel",
                    "libyaml-devel",
                    "libffi-devel",
                    "mlocate",
                    "libxml2",
                    "postgresql",
                    "postgresql-devel",
                    "memcached",
                    "ruby19-devel",
                    "libxml2-devel",
                    "libxslt-devel",
                    "git",
                    "make",
                    "gcc",
                    "hunspell",
                    "gettext",
                    "postfix",
                    "cyrus-sasl",
                    "cyrus-sasl-devel",
                    "sqlite"
                ],
                "CustomSecurityGroupIds": [
                    {
                        "Ref": "jenkinsSecurityGroup"
                    }
                ],
                "CustomRecipes": {
                    "Deploy": [
                        "jenkins::server",
                        "jenkins-configuration::vars",
                        "jenkins::proxy",
                        "jenkins-configuration::jobs",
                        "jenkins-configuration::setup_email_plugin",
                        "opsworks_nodejs",
                        "jenkins-configuration::users"
                    ]
                }
            }
        },
        "jenkinsSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow inbound requests from the ELB to the Jenkins instance",
                "VpcId": {
                    "Ref": "vpc"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9418",
                        "ToPort": "9418",
                        "SourceSecurityGroupId": {
                            "Ref": "ELBSecurityGroup"
                        }
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8080",
                        "ToPort": "8080",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9418",
                        "ToPort": "9418",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "jenkins": {
            "Type": "AWS::OpsWorks::Instance",
            "Properties": {
                "StackId": {
                    "Ref": "jenkinsstack"
                },
                "LayerIds": [
                    {
                        "Ref": "jenkinslayer"
                    }
                ],
                "InstallUpdatesOnBoot": true,
                "Os": "Amazon Linux",
                "InstanceType": "c3.large",
                "RootDeviceType": "ebs",
                "Architecture": "x86_64"
            }
        },
        "OpsWorksServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "opsworks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "opsworks-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "OpsWorksInstanceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "opsworks-service",
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "*",
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "OpsWorksInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "OpsWorksInstanceRole"
                    }
                ]
            }
        },
        "EmailUser": {
            "Type": "AWS::IAM::User"
        },
        "EmailUserPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "EmailUser",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "ses:SendRawEmail",
                            "Resource": "*"
                        }
                    ]
                },
                "Users": [
                    {
                        "Ref": "EmailUser"
                    }
                ]
            }
        },
        "EmailUserKeys": {
            "Type": "AWS::IAM::AccessKey",
            "Properties": {
                "UserName": {
                    "Ref": "EmailUser"
                }
            }
        },
        "ELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow inbound access to the ELB",
                "VpcId": {
                    "Ref": "vpc"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "JenkinsLayerLoadBalancerAttachment": {
            "Type": "AWS::OpsWorks::ElasticLoadBalancerAttachment",
            "Properties": {
                "ElasticLoadBalancerName": {
                    "Ref": "JenkinsElasticLoadBalancer"
                },
                "LayerId": {
                    "Ref": "jenkinslayer"
                }
            }
        },
        "JenkinsElasticLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties": {
                "SecurityGroups": [
                    {
                        "Ref": "ELBSecurityGroup"
                    }
                ],
                "Subnets": [
                    {
                        "Ref": "publicSubnet"
                    }
                ],
                "Listeners": [
                    {
                        "LoadBalancerPort": "80",
                        "InstancePort": "80",
                        "Protocol": "TCP"
                    }
                ],
                "HealthCheck": {
                    "Target": "TCP:80",
                    "HealthyThreshold": "3",
                    "UnhealthyThreshold": "5",
                    "Interval": "90",
                    "Timeout": "60"
                }
            }
        }
    },
    "Outputs": {
        "StackId": {
            "Value": {
                "Ref": "jenkinsstack"
            }
        }
    }
}